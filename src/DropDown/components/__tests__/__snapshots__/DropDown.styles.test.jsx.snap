// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test for DropDown Styles Components Button should render correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Button-sc-1vybocn-1",
        "isStatic": false,
        "rules": Array [
          "background-color:transparent;color:",
          [Function],
          ";cursor:pointer;border:0px;padding:5px 38px 5px 10px;box-sizing:border-box;border-radius:4px;font-family:",
          [Function],
          ";font-size:",
          [Function],
          ";font-weight:",
          [Function],
          ";&:focus{outline:0;}&::-moz-focus-inner{border:0;}&:hover{background-color:",
          [Function],
          "}position:relative;&:after{content:\\"\\";position:absolute;top:calc(50% - 3px);right:10px;width:0px;height:0px;border-top:5px solid ",
          [Function],
          ";border-right:5px solid transparent;border-bottom:5px solid transparent;border-left:5px solid transparent;transform:scale(0.75);}",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: ",
          [Function],
          ";
    &:after {
      transform: scale(1);
    }
  ",
          "}",
        ],
      },
      "displayName": "styles__Button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__Button-sc-1vybocn-1",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Test for DropDown Styles Components Button should render correctly with theme 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Button-sc-1vybocn-1",
        "isStatic": false,
        "rules": Array [
          "background-color:transparent;color:",
          [Function],
          ";cursor:pointer;border:0px;padding:5px 38px 5px 10px;box-sizing:border-box;border-radius:4px;font-family:",
          [Function],
          ";font-size:",
          [Function],
          ";font-weight:",
          [Function],
          ";&:focus{outline:0;}&::-moz-focus-inner{border:0;}&:hover{background-color:",
          [Function],
          "}position:relative;&:after{content:\\"\\";position:absolute;top:calc(50% - 3px);right:10px;width:0px;height:0px;border-top:5px solid ",
          [Function],
          ";border-right:5px solid transparent;border-bottom:5px solid transparent;border-left:5px solid transparent;transform:scale(0.75);}",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: ",
          [Function],
          ";
    &:after {
      transform: scale(1);
    }
  ",
          "}",
        ],
      },
      "displayName": "styles__Button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__Button-sc-1vybocn-1",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  theme={
    Object {
      "dropdown": Object {
        "button": Object {
          "caret": "#222",
          "color": "#000",
          "hover": "#111",
        },
        "label": Object {
          "background": "#ccc",
          "border": "#ddd",
          "color": "#eee",
        },
        "list": Object {
          "background": "#333",
          "border": "#444",
        },
        "menu": Object {
          "icon": "#123",
          "option": Object {
            "background": "#456",
            "color": "#789",
            "hover": Object {
              "background": "#abc",
              "color": "#def",
            },
          },
        },
        "option": Object {
          "background": "#555",
          "hover": Object {
            "background": "#aaa",
            "color": "#bbb",
          },
          "selected": Object {
            "background": "#666",
            "color": "#777",
          },
          "unselected": Object {
            "background": "#888",
            "color": "#999",
          },
        },
      },
    }
  }
/>
`;

exports[`Test for DropDown Styles Components ButtonMenu should render correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__ButtonMenu-sc-1vybocn-2",
        "isStatic": false,
        "rules": Array [
          "background-color:transparent;color:",
          [Function],
          ";cursor:pointer;border:0px;padding:5px 38px 5px 10px;box-sizing:border-box;border-radius:4px;font-family:",
          [Function],
          ";font-size:",
          [Function],
          ";font-weight:",
          [Function],
          ";&:focus{outline:0;}&::-moz-focus-inner{border:0;}&:hover{background-color:",
          [Function],
          "}position:relative;&:after{content:\\"\\";position:absolute;top:calc(50% - 3px);right:10px;width:0px;height:0px;border-top:5px solid ",
          [Function],
          ";border-right:5px solid transparent;border-bottom:5px solid transparent;border-left:5px solid transparent;transform:scale(0.75);}",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: ",
          [Function],
          ";
    &:after {
      transform: scale(1);
    }
  ",
          "}",
          "padding:5px;&:after{display:none;}",
        ],
      },
      "displayName": "styles__ButtonMenu",
      "foldedComponentIds": Array [
        "styles__Button-sc-1vybocn-1",
      ],
      "render": [Function],
      "styledComponentId": "styles__ButtonMenu-sc-1vybocn-2",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Test for DropDown Styles Components ButtonMenu should render correctly with theme 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__ButtonMenu-sc-1vybocn-2",
        "isStatic": false,
        "rules": Array [
          "background-color:transparent;color:",
          [Function],
          ";cursor:pointer;border:0px;padding:5px 38px 5px 10px;box-sizing:border-box;border-radius:4px;font-family:",
          [Function],
          ";font-size:",
          [Function],
          ";font-weight:",
          [Function],
          ";&:focus{outline:0;}&::-moz-focus-inner{border:0;}&:hover{background-color:",
          [Function],
          "}position:relative;&:after{content:\\"\\";position:absolute;top:calc(50% - 3px);right:10px;width:0px;height:0px;border-top:5px solid ",
          [Function],
          ";border-right:5px solid transparent;border-bottom:5px solid transparent;border-left:5px solid transparent;transform:scale(0.75);}",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: ",
          [Function],
          ";
    &:after {
      transform: scale(1);
    }
  ",
          "}",
          "padding:5px;&:after{display:none;}",
        ],
      },
      "displayName": "styles__ButtonMenu",
      "foldedComponentIds": Array [
        "styles__Button-sc-1vybocn-1",
      ],
      "render": [Function],
      "styledComponentId": "styles__ButtonMenu-sc-1vybocn-2",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  theme={
    Object {
      "dropdown": Object {
        "button": Object {
          "caret": "#222",
          "color": "#000",
          "hover": "#111",
        },
        "label": Object {
          "background": "#ccc",
          "border": "#ddd",
          "color": "#eee",
        },
        "list": Object {
          "background": "#333",
          "border": "#444",
        },
        "menu": Object {
          "icon": "#123",
          "option": Object {
            "background": "#456",
            "color": "#789",
            "hover": Object {
              "background": "#abc",
              "color": "#def",
            },
          },
        },
        "option": Object {
          "background": "#555",
          "hover": Object {
            "background": "#aaa",
            "color": "#bbb",
          },
          "selected": Object {
            "background": "#666",
            "color": "#777",
          },
          "unselected": Object {
            "background": "#888",
            "color": "#999",
          },
        },
      },
    }
  }
/>
`;

exports[`Test for DropDown Styles Components Icon should render correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Icon-sc-1vybocn-3",
        "isStatic": false,
        "rules": Array [
          "display:block;height:25px;width:25px;fill:",
          [Function],
          ";;",
        ],
      },
      "displayName": "styles__Icon",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__Icon-sc-1vybocn-3",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Test for DropDown Styles Components Icon should render correctly with theme 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Icon-sc-1vybocn-3",
        "isStatic": false,
        "rules": Array [
          "display:block;height:25px;width:25px;fill:",
          [Function],
          ";;",
        ],
      },
      "displayName": "styles__Icon",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__Icon-sc-1vybocn-3",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  theme={
    Object {
      "dropdown": Object {
        "button": Object {
          "caret": "#222",
          "color": "#000",
          "hover": "#111",
        },
        "label": Object {
          "background": "#ccc",
          "border": "#ddd",
          "color": "#eee",
        },
        "list": Object {
          "background": "#333",
          "border": "#444",
        },
        "menu": Object {
          "icon": "#123",
          "option": Object {
            "background": "#456",
            "color": "#789",
            "hover": Object {
              "background": "#abc",
              "color": "#def",
            },
          },
        },
        "option": Object {
          "background": "#555",
          "hover": Object {
            "background": "#aaa",
            "color": "#bbb",
          },
          "selected": Object {
            "background": "#666",
            "color": "#777",
          },
          "unselected": Object {
            "background": "#888",
            "color": "#999",
          },
        },
      },
    }
  }
/>
`;

exports[`Test for DropDown Styles Components Label should render correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Label-sc-1vybocn-4",
        "isStatic": false,
        "rules": Array [
          "padding:5px 0px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";border-bottom:1px solid ",
          [Function],
          ";font-weight:bold;text-align:center;user-select:none;",
        ],
      },
      "displayName": "styles__Label",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__Label-sc-1vybocn-4",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Test for DropDown Styles Components Label should render correctly with theme 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Label-sc-1vybocn-4",
        "isStatic": false,
        "rules": Array [
          "padding:5px 0px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";border-bottom:1px solid ",
          [Function],
          ";font-weight:bold;text-align:center;user-select:none;",
        ],
      },
      "displayName": "styles__Label",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__Label-sc-1vybocn-4",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  theme={
    Object {
      "dropdown": Object {
        "button": Object {
          "caret": "#222",
          "color": "#000",
          "hover": "#111",
        },
        "label": Object {
          "background": "#ccc",
          "border": "#ddd",
          "color": "#eee",
        },
        "list": Object {
          "background": "#333",
          "border": "#444",
        },
        "menu": Object {
          "icon": "#123",
          "option": Object {
            "background": "#456",
            "color": "#789",
            "hover": Object {
              "background": "#abc",
              "color": "#def",
            },
          },
        },
        "option": Object {
          "background": "#555",
          "hover": Object {
            "background": "#aaa",
            "color": "#bbb",
          },
          "selected": Object {
            "background": "#666",
            "color": "#777",
          },
          "unselected": Object {
            "background": "#888",
            "color": "#999",
          },
        },
      },
    }
  }
/>
`;

exports[`Test for DropDown Styles Components List should render correctly when position is set to shift-left 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__List-sc-1vybocn-5",
        "isStatic": false,
        "rules": Array [
          "list-style-type:none;position:absolute;",
          [Function],
          " display:flex;white-space:nowrap;flex-direction:column;background-color:",
          [Function],
          ";box-shadow:0 2px 6px 0 rgba(0,0,0,0.1);border:solid 1px ",
          [Function],
          ";border-radius:2px;z-index:5;margin:0px;padding:0px;font-family:inherit;font-size:14px;font-weight:500;opacity:",
          [Function],
          ";transition:all 100ms ease-in-out;transform-origin:top left;transform:scaleY(",
          [Function],
          ");",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
          " ",
          "@media (min-width:",
          "1200px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
        ],
      },
      "displayName": "styles__List",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__List-sc-1vybocn-5",
      "target": "ul",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  position="shift-left"
/>
`;

exports[`Test for DropDown Styles Components List should render correctly when position is set to shift-right 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__List-sc-1vybocn-5",
        "isStatic": false,
        "rules": Array [
          "list-style-type:none;position:absolute;",
          [Function],
          " display:flex;white-space:nowrap;flex-direction:column;background-color:",
          [Function],
          ";box-shadow:0 2px 6px 0 rgba(0,0,0,0.1);border:solid 1px ",
          [Function],
          ";border-radius:2px;z-index:5;margin:0px;padding:0px;font-family:inherit;font-size:14px;font-weight:500;opacity:",
          [Function],
          ";transition:all 100ms ease-in-out;transform-origin:top left;transform:scaleY(",
          [Function],
          ");",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
          " ",
          "@media (min-width:",
          "1200px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
        ],
      },
      "displayName": "styles__List",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__List-sc-1vybocn-5",
      "target": "ul",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  position="shift-right"
/>
`;

exports[`Test for DropDown Styles Components List should render correctly with props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__List-sc-1vybocn-5",
        "isStatic": false,
        "rules": Array [
          "list-style-type:none;position:absolute;",
          [Function],
          " display:flex;white-space:nowrap;flex-direction:column;background-color:",
          [Function],
          ";box-shadow:0 2px 6px 0 rgba(0,0,0,0.1);border:solid 1px ",
          [Function],
          ";border-radius:2px;z-index:5;margin:0px;padding:0px;font-family:inherit;font-size:14px;font-weight:500;opacity:",
          [Function],
          ";transition:all 100ms ease-in-out;transform-origin:top left;transform:scaleY(",
          [Function],
          ");",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
          " ",
          "@media (min-width:",
          "1200px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
        ],
      },
      "displayName": "styles__List",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__List-sc-1vybocn-5",
      "target": "ul",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  opacity="1"
  scaleY="1"
/>
`;

exports[`Test for DropDown Styles Components List should render correctly with theme 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__List-sc-1vybocn-5",
        "isStatic": false,
        "rules": Array [
          "list-style-type:none;position:absolute;",
          [Function],
          " display:flex;white-space:nowrap;flex-direction:column;background-color:",
          [Function],
          ";box-shadow:0 2px 6px 0 rgba(0,0,0,0.1);border:solid 1px ",
          [Function],
          ";border-radius:2px;z-index:5;margin:0px;padding:0px;font-family:inherit;font-size:14px;font-weight:500;opacity:",
          [Function],
          ";transition:all 100ms ease-in-out;transform-origin:top left;transform:scaleY(",
          [Function],
          ");",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
          " ",
          "@media (min-width:",
          "1200px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
        ],
      },
      "displayName": "styles__List",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__List-sc-1vybocn-5",
      "target": "ul",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  theme={
    Object {
      "dropdown": Object {
        "button": Object {
          "caret": "#222",
          "color": "#000",
          "hover": "#111",
        },
        "label": Object {
          "background": "#ccc",
          "border": "#ddd",
          "color": "#eee",
        },
        "list": Object {
          "background": "#333",
          "border": "#444",
        },
        "menu": Object {
          "icon": "#123",
          "option": Object {
            "background": "#456",
            "color": "#789",
            "hover": Object {
              "background": "#abc",
              "color": "#def",
            },
          },
        },
        "option": Object {
          "background": "#555",
          "hover": Object {
            "background": "#aaa",
            "color": "#bbb",
          },
          "selected": Object {
            "background": "#666",
            "color": "#777",
          },
          "unselected": Object {
            "background": "#888",
            "color": "#999",
          },
        },
      },
    }
  }
/>
`;

exports[`Test for DropDown Styles Components List should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__List-sc-1vybocn-5",
        "isStatic": false,
        "rules": Array [
          "list-style-type:none;position:absolute;",
          [Function],
          " display:flex;white-space:nowrap;flex-direction:column;background-color:",
          [Function],
          ";box-shadow:0 2px 6px 0 rgba(0,0,0,0.1);border:solid 1px ",
          [Function],
          ";border-radius:2px;z-index:5;margin:0px;padding:0px;font-family:inherit;font-size:14px;font-weight:500;opacity:",
          [Function],
          ";transition:all 100ms ease-in-out;transform-origin:top left;transform:scaleY(",
          [Function],
          ");",
          "@media (min-width:",
          "992px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
          " ",
          "@media (min-width:",
          "1200px",
          "){",
          "
    font-size: 16px;
  ",
          "}",
        ],
      },
      "displayName": "styles__List",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__List-sc-1vybocn-5",
      "target": "ul",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Test for DropDown Styles Components MenuOption should render correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__MenuOption-sc-1vybocn-7",
        "isStatic": false,
        "rules": Array [
          "padding:5px 40px 5px 20px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";cursor:pointer;user-select:none;&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
          "background-color:",
          [Function],
          ";color:",
          [Function],
          ";&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
        ],
      },
      "displayName": "styles__MenuOption",
      "foldedComponentIds": Array [
        "styles__Option-sc-1vybocn-6",
      ],
      "propTypes": Object {
        "children": [Function],
      },
      "render": [Function],
      "styledComponentId": "styles__MenuOption-sc-1vybocn-7",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  string
</StyledComponent>
`;

exports[`Test for DropDown Styles Components MenuOption should render correctly with theme 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__MenuOption-sc-1vybocn-7",
        "isStatic": false,
        "rules": Array [
          "padding:5px 40px 5px 20px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";cursor:pointer;user-select:none;&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
          "background-color:",
          [Function],
          ";color:",
          [Function],
          ";&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
        ],
      },
      "displayName": "styles__MenuOption",
      "foldedComponentIds": Array [
        "styles__Option-sc-1vybocn-6",
      ],
      "propTypes": Object {
        "children": [Function],
      },
      "render": [Function],
      "styledComponentId": "styles__MenuOption-sc-1vybocn-7",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  theme={
    Object {
      "dropdown": Object {
        "button": Object {
          "caret": "#222",
          "color": "#000",
          "hover": "#111",
        },
        "label": Object {
          "background": "#ccc",
          "border": "#ddd",
          "color": "#eee",
        },
        "list": Object {
          "background": "#333",
          "border": "#444",
        },
        "menu": Object {
          "icon": "#123",
          "option": Object {
            "background": "#456",
            "color": "#789",
            "hover": Object {
              "background": "#abc",
              "color": "#def",
            },
          },
        },
        "option": Object {
          "background": "#555",
          "hover": Object {
            "background": "#aaa",
            "color": "#bbb",
          },
          "selected": Object {
            "background": "#666",
            "color": "#777",
          },
          "unselected": Object {
            "background": "#888",
            "color": "#999",
          },
        },
      },
    }
  }
>
  string
</StyledComponent>
`;

exports[`Test for DropDown Styles Components Option should render correctly when disabled 1`] = `
<StyledComponent
  disabled={true}
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Option-sc-1vybocn-6",
        "isStatic": false,
        "rules": Array [
          "padding:5px 40px 5px 20px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";cursor:pointer;user-select:none;&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
        ],
      },
      "displayName": "styles__Option",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "children": [Function],
      },
      "render": [Function],
      "styledComponentId": "styles__Option-sc-1vybocn-6",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  1
</StyledComponent>
`;

exports[`Test for DropDown Styles Components Option should render correctly when selected 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Option-sc-1vybocn-6",
        "isStatic": false,
        "rules": Array [
          "padding:5px 40px 5px 20px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";cursor:pointer;user-select:none;&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
        ],
      },
      "displayName": "styles__Option",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "children": [Function],
      },
      "render": [Function],
      "styledComponentId": "styles__Option-sc-1vybocn-6",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  selected={true}
>
  string
</StyledComponent>
`;

exports[`Test for DropDown Styles Components Option should render correctly with theme 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Option-sc-1vybocn-6",
        "isStatic": false,
        "rules": Array [
          "padding:5px 40px 5px 20px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";cursor:pointer;user-select:none;&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
        ],
      },
      "displayName": "styles__Option",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "children": [Function],
      },
      "render": [Function],
      "styledComponentId": "styles__Option-sc-1vybocn-6",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  theme={
    Object {
      "dropdown": Object {
        "button": Object {
          "caret": "#222",
          "color": "#000",
          "hover": "#111",
        },
        "label": Object {
          "background": "#ccc",
          "border": "#ddd",
          "color": "#eee",
        },
        "list": Object {
          "background": "#333",
          "border": "#444",
        },
        "menu": Object {
          "icon": "#123",
          "option": Object {
            "background": "#456",
            "color": "#789",
            "hover": Object {
              "background": "#abc",
              "color": "#def",
            },
          },
        },
        "option": Object {
          "background": "#555",
          "hover": Object {
            "background": "#aaa",
            "color": "#bbb",
          },
          "selected": Object {
            "background": "#666",
            "color": "#777",
          },
          "unselected": Object {
            "background": "#888",
            "color": "#999",
          },
        },
      },
    }
  }
>
  string
</StyledComponent>
`;

exports[`Test for DropDown Styles Components Option should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Option-sc-1vybocn-6",
        "isStatic": false,
        "rules": Array [
          "padding:5px 40px 5px 20px;border-radius:2px;background-color:",
          [Function],
          ";color:",
          [Function],
          ";cursor:pointer;user-select:none;&:hover{background-color:",
          [Function],
          ";color:",
          [Function],
          ";}",
        ],
      },
      "displayName": "styles__Option",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "children": [Function],
      },
      "render": [Function],
      "styledComponentId": "styles__Option-sc-1vybocn-6",
      "target": "li",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  string
</StyledComponent>
`;

exports[`Test for DropDown Styles Components should render Card correctly  1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "styles__Box-sc-1vybocn-0",
        "isStatic": false,
        "rules": Array [
          "position:relative;display:inline-block;",
        ],
      },
      "displayName": "styles__Box",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "styles__Box-sc-1vybocn-0",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;
