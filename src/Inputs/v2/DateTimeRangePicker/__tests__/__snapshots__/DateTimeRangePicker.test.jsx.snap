// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test for DateTimeRangePicker should render correctly with disabled=true 1`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Hint
      visible={true}
    />
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={true}
          error={false}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={true}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={true}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={true}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={true}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={false}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;

exports[`Test for DateTimeRangePicker should render correctly with errorMessage 1`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Hint
      visible={true}
    />
    <DateTimeRangePickerstyles__Error
      visible={true}
    >
      Erro!
    </DateTimeRangePickerstyles__Error>
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={false}
          error={true}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={true}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;

exports[`Test for DateTimeRangePicker should render correctly with hintText 1`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Hint
      visible={true}
    >
      hint Text
    </DateTimeRangePickerstyles__Hint>
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={false}
          error={false}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={false}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;

exports[`Test for DateTimeRangePicker should render correctly with label 1`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Label
      disabled={false}
      error={false}
      focused={false}
      valid={false}
    >
      label
    </DateTimeRangePickerstyles__Label>
    <DateTimeRangePickerstyles__Hint
      visible={false}
    />
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={false}
          error={false}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={false}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;

exports[`Test for DateTimeRangePicker should render correctly with label 2`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Label
      disabled={false}
      error={false}
      focused={false}
      valid={false}
    >
      label
    </DateTimeRangePickerstyles__Label>
    <DateTimeRangePickerstyles__Hint
      visible={false}
    />
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={false}
          error={false}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={false}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;

exports[`Test for DateTimeRangePicker should render correctly with label and openLabel 1`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Label
      disabled={false}
      error={false}
      focused={true}
      valid={false}
    >
      label
    </DateTimeRangePickerstyles__Label>
    <DateTimeRangePickerstyles__Hint
      visible={false}
    />
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={false}
          error={false}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={false}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;

exports[`Test for DateTimeRangePicker should render correctly with placeholder 1`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Hint
      visible={true}
    >
      placeholder
    </DateTimeRangePickerstyles__Hint>
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={false}
          error={false}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={false}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;

exports[`Test for DateTimeRangePicker should render correctly without props 1`] = `
<ClickOutside
  onOutsideClick={[Function]}
>
  <DateTimeRangePickerstyles__Container>
    <DateTimeRangePickerstyles__Hint
      visible={true}
    />
    <SimpleDropDown
      autoPosition={true}
      containerSize={false}
      customButton={
        <ForwardRef(DateTimeRangePickerstyles__InputShell)
          disabled={false}
          error={false}
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__InputSeparator)
            show={false}
          >
            a
          </ForwardRef(DateTimeRangePickerstyles__InputSeparator)>
          <ForwardRef(DateTimeRangePickerstyles__DateInput)
            data-maxlength="10"
            disabled={false}
            inputRef={[Function]}
            mask="99/99/9999"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
          <ForwardRef(DateTimeRangePickerstyles__TimeInput)
            data-maxlength="8"
            disabled={false}
            inputRef={[Function]}
            mask="99:99:99"
            maskChar={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            value=""
          />
        </ForwardRef(DateTimeRangePickerstyles__InputShell)>
      }
      hasOutsideLabel={false}
      label=""
      open={false}
      position="bottom-left"
      window={[Window]}
    >
      <DateTimeRangePickerstyles__Row>
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-06-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "prev",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
        <DateTime
          calendarRef={[Function]}
          dayRenderer={[Function]}
          firstDayOfWeek={0}
          minDate={null}
          month={"2019-07-01T00:00:00.000Z"}
          monthsLabels={
            Array [
              "Janeiro",
              "Fevereiro",
              "Março",
              "Abril",
              "Maio",
              "Junho",
              "Julho",
              "Agosto",
              "Setembro",
              "Outubro",
              "Novembro",
              "Dezembro",
            ]
          }
          navigation={
            Array [
              "next",
            ]
          }
          onCalendarClick={[Function]}
          onClockClick={[Function]}
          onNavigate={[Function]}
          time=""
          weekLabels={
            Array [
              "D",
              "S",
              "T",
              "Q",
              "Q",
              "S",
              "S",
            ]
          }
        />
      </DateTimeRangePickerstyles__Row>
    </SimpleDropDown>
    <DateTimeRangePickerstyles__Icon
      error={false}
      hide={false}
    />
    <DateTimeRangePickerstyles__Close
      onClick={[Function]}
      onMouseEnter={[Function]}
      show={false}
    />
  </DateTimeRangePickerstyles__Container>
</ClickOutside>
`;
